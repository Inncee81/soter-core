<?php

use Soter_Core\Package;
use Soter_Core\Vulnerability;

class Vulnerability_Test extends WP_UnitTestCase {
	protected $package;
	protected $vulnerability;

	public function setUp() {
		parent::setUp();

		$response = sct_get_http_fixture_array( '/api/v2/plugins/contact-form-7' );

		$decoded = json_decode( $response[2], true );
		$body = array_shift( $decoded );
		$vulns = isset( $body['vulnerabilities'] ) ? $body['vulnerabilities'] : array();
		$vuln = array_shift( $vulns );

		$this->package = new Package( 'contact-form-7', Package::TYPE_PLUGIN, '3.7' );

		$this->vulnerability = new Vulnerability( $this->package, $vuln );
	}

	public function tearDown() {
		parent::tearDown();

		$this->package = null;
		$this->vulnerability = null;
	}

	/** @test */
	function it_trims_individual_string_data_points() {
		// Actual response includes a trailing space.
		$this->assertEquals(
			'Contact Form 7 <= 3.7.1 - Security Bypass',
			$this->vulnerability->title
		);
	}

	/** @test */
	function it_converts_timestamps_to_datetime_objects() {
		$this->assertEquals(
			new DateTime( '2014-08-01T10:59:06.000Z' ),
			$this->vulnerability->created_at
		);
		$this->assertEquals(
			new DateTime( '2015-05-15T13:48:25.000Z' ),
			$this->vulnerability->updated_at
		);
		$this->assertNull( $this->vulnerability->published_date );
	}

	/** @test */
	function it_provides_access_to_all_props_included_in_api_response() {
		$this->assertTrue( is_int( $this->vulnerability->id ) );

		foreach ( array( 'title', 'vuln_type', 'fixed_in' ) as $key ) {
			$this->assertTrue( is_string( $this->vulnerability->{$key} ) );
		}

		foreach ( array( 'created_at', 'updated_at' ) as $key ) {
			$this->assertTrue( $this->vulnerability->{$key} instanceof DateTime );
		}

		// A bit odd because it can be null from API or null if not set.
		// Need to find a response where this is actually set and swap it out for this test.
		$this->assertNull( $this->vulnerability->published_date );

		$this->assertTrue( is_array( $this->vulnerability->references ) );
	}

	/** @test */
	function it_knows_if_it_affects_the_current_package_version() {
		$this->assertTrue( $this->vulnerability->affects_current_version() );
	}

	/** @test */
	function it_knows_if_affects_a_given_package_version() {
		$this->assertTrue( $this->vulnerability->affects_version( '3.7' ) );
		$this->assertFalse( $this->vulnerability->affects_version( '3.8' ) );
	}

	/** @test */
	function it_provides_access_to_full_data_array() {
		$data = $this->vulnerability->get_data();

		// Testing for lack of trailing space.
		$this->assertEquals( 'Contact Form 7 <= 3.7.1 - Security Bypass', $data['title'] );
	}

	/** @test */
	function it_provides_access_to_package() {
		$this->assertSame( $this->package, $this->vulnerability->get_package() );
	}

	/** @test */
	function it_provides_access_to_raw_data_array() {
		$raw = $this->vulnerability->get_raw();

		// Testing for trailing space.
		$this->assertEquals( 'Contact Form 7 <= 3.7.1 - Security Bypass ', $raw['title'] );
	}
}
